<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dao.BoardDAO">

    <!-- 게시글 작성 -->
    <insert id="insertBoard" parameterType="dto.BoardDTO">
        INSERT INTO post_board (userId, title, content, category, postType, createTime, shippingFee, includes, imageFileName)
        VALUES (#{userId}, #{title}, #{content}, #{category}, #{postType}, NOW(), #{shippingFee}, #{includes}, #{imageFileName})
    </insert>

    <!-- 게시글 목록 조회 (카테고리별) -->
    <select id="getBoardListByCategory" parameterType="map" resultType="dto.BoardDTO">
        SELECT * FROM post_board
        <where>
            <if test="category != '전체'">
                category = #{category}
            </if>
        </where>
        ORDER BY createTime DESC
        LIMIT #{startNum}, #{pageSize}
    </select>

    <!-- 게시글 목록 조회 (전체) -->
    <select id="getAllBoardList" resultType="dto.BoardDTO">
        SELECT * FROM post_board ORDER BY createTime DESC
    </select>

    <!-- 게시글 상세 조회 -->
    <select id="getBoardDetail" parameterType="int" resultType="dto.BoardDTO">
        SELECT * FROM post_board WHERE boardId = #{boardId}
    </select>

    <!-- 조회수 증가 -->
    <update id="increaseViews" parameterType="int">
        UPDATE post_board SET views = views + 1 WHERE boardId = #{boardId}
    </update>
    
    <!-- 게시글 검색 (카테고리, 제목, 작성자, 구매/판매) -->
    <select id="searchBoards" parameterType="string" resultType="dto.BoardDTO">
        SELECT * 
        FROM post_board
        WHERE 
            (title LIKE CONCAT('%', #{searchKeyword}, '%')
            OR userId LIKE CONCAT('%', #{searchKeyword}, '%')
            OR category LIKE CONCAT('%', #{searchKeyword}, '%')
            OR postType LIKE CONCAT('%', #{searchKeyword}, '%'))
        ORDER BY createTime DESC
    </select>

    <!-- 게시글 수정 -->
    <update id="updateBoard" parameterType="dto.BoardDTO">
        UPDATE post_board SET title = #{title}, content = #{content}, category = #{category}, postType = #{postType},
        shippingFee = #{shippingFee}, includes = #{includes}, imageFileName = #{imageFileName} WHERE boardId = #{boardId}
    </update>

    <!-- 자식 댓글(대댓글) 삭제 -->
    <delete id="deleteChildCommentsByBoardId" parameterType="int">
        DELETE FROM post_comment WHERE parentComment IS NOT NULL AND boardId = #{boardId}
    </delete>

    <!-- 부모 댓글 삭제 -->
    <delete id="deleteParentCommentsByBoardId" parameterType="int">
        DELETE FROM post_comment WHERE parentComment IS NULL AND boardId = #{boardId}
    </delete>

    <!-- 게시글 삭제 -->
    <delete id="deleteBoard" parameterType="int">
        DELETE FROM post_board WHERE boardId = #{boardId}
    </delete>

</mapper>
